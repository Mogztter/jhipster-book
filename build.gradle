buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.36.0'
        classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.19'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.4'
        classpath 'org.jruby:jruby-complete:9.2.16.0'
    }
}

plugins {
    id 'org.asciidoctor.jvm.pdf' version '3.1.0' apply false
    id 'org.asciidoctor.jvm.convert' version '3.1.0' apply false
    id 'org.asciidoctor.jvm.gems' version '3.1.0'
    id 'de.undercouch.download' version '4.1.1'
    id 'se.patrikerdes.use-latest-versions' version '0.2.15'
    id 'com.github.ben-manes.versions' version '0.38.0'
}

repositories {
    ruby {
        gems()
    }
}

dependencies {
    asciidoctorGems 'rubygems:coderay:1.1.3'
}

apply plugin: 'java'
//apply plugin: 'org.asciidoctor.jvm.convert'
apply plugin: 'org.asciidoctor.jvm.gems'
//apply plugin: 'org.asciidoctor.jvm.pdf'
apply plugin: 'com.github.ben-manes.versions'

version = '5.0.3'

asciidoctorj {
    version = '2.4.2'
}

import org.asciidoctor.gradle.jvm.AsciidoctorTask

def attrs = ['sourcedir'         : '../../../main/webapp',
             'source-highlighter': 'rouge',
             'epub3-stylesdir'   : './styles/epub',
             // NOTE don't include leading ./ because it messes up paths in the epub files
             'imagesdir'         : 'images',
             'toc'               : 'left',
             'icons'             : 'font',
             'sectanchors'       : '',
             'idprefix'          : '',
             'idseparator'       : '-',
             'listing-caption'   : 'Listing']

tasks.withType(AsciidoctorTask) { task ->
    attributes attrs
    sources {
        include 'index.adoc'
    }
}


task html(type: AsciidoctorTask, description: 'Generates single page HTML') {
    dependsOn asciidoctorGemsPrepare

    asciidoctorj {
        outputOptions {
            backends 'html5'
        }
    }
}

task prepress(type: AsciidoctorTask, description: 'Generates PDF for prepress printing') {
    asciidoctorj {
        attributes attrs + ['media': 'prepress', 'pdfmarks': '', 'pdf-theme': 'prepress']
        attrs.remove('source-highlighter')
        requires file('src/main/ruby/asciidoctor-pdf-extensions.rb')
        outputOptions {
            separateOutputDirs = false
            outputDir "$buildDir/asciidoc/pdf-prepress"
            backends 'pdf'
        }
    }
}

task pdf(type: AsciidoctorTask, description: 'Generates PDF for download') {
    asciidoctorj {
        attributes attrs + ['pdfmarks': '', 'source-highlighter': 'rouge']
        requires file('src/main/ruby/asciidoctor-pdf-extensions.rb')
        outputOptions {
            separateOutputDirs = false
            outputDir "$buildDir/asciidoc/pdf-screen"
            backends 'pdf'
        }
    }
}

task epub(type: AsciidoctorTask, description: 'Generates EPUB3') {
    asciidoctorj {
        outputOptions {
            backends 'epub3'
        }
    }
}

pdf.shouldRunAfter html
prepress.shouldRunAfter pdf
epub.shouldRunAfter prepress

task all(dependsOn: ['html', 'pdf', 'prepress', 'epub'])

defaultTasks 'all'

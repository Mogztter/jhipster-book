Book Abstract:

The JHipster Mini-Book is a guide to getting started with hip technologies today: Angular, Bootstrap and Spring Boot. All of these frameworks are wrapped up in an easy-to-use project called JHipster. JHipster is a development platform to generate, develop and deploy Spring Boot + Angular (or React) web applications and microservices. This book shows you how to build an app with JHipster, and guides you through the plethora of tools, techniques, and options you can use. Furthermore, it explains the UI and API building blocks so you understand the underpinnings of your great application. It also shows you how to use Docker Compose and deploy your microservices to Heroku.

The latest edition (v5.0) is updated for JHipster 5.x.

You can find the blog for the JHipster Mini-Book at http://www.jhipster-book.com. You can also follow it on Twitter at https://twitter.com/jhipster_book.

Purpose of the book:

To provide free information to the JHipster community. I've used many of the frameworks that JHipster supports and I like how it integrates them. I think building web and mobile applications with Angular, Bootstrap and Spring Boot is a great experience and I'd like to encourage more developers to try it.

Table of Contents:

The JHipster Mini-Book
Dedication
Acknowledgements
Preface
    What is in an InfoQ mini-book?
    Who this book is for
    What you need for this book
    Conventions
    Reader feedback
Introduction
Building an app with JHipster
    Creating the application
    Building the UI and business logic
    Application improvements
    Deploying to Heroku
    Monitoring and analytics
    Continuous integration and deployment
    Source code
    Upgrading 21-Points Health
    Summary
JHipster's UI components
    Angular
    Bootstrap
    Internationalization (i18n)
    Sass
    webpack
    WebSockets
    Browsersync
    Summary
JHipster's API building blocks
    Spring Boot
    Maven versus Gradle
    IDE support: Running, debugging, and profiling
    Security
    JPA versus MongoDB versus Cassandra
    Liquibase
    Elasticsearch
    Deployment
    Summary
Microservices with JHipster
    History of microservices
    Why microservices?
    Microservices with JHipster
    Generate an API gateway
    Install JHipster Registry
    Generate a blog microservice application
    Generate a store microservice application
    Run your microservices architecture
    Deploy to Heroku
    Source code
    Summary
Action!
    Additional reading
About the author

Author Bio:

Matt Raible is a web developer, Java Champion, and Developer Advocate @okta. He loves to architect and build slick-looking UIs using CSS and JavaScript. When he's not evangelizing Okta and open source, he likes to ski with his family, drive his VWs, and enjoy craft beer.

https://www.flickr.com/photos/mraible/16900780428

Back Cover:

The things you need to do to set up a new software project can be daunting. First, you have to select the back-end framework to create your API, choose your database, set up security, and choose your build tool. Then you have to choose the tools to create your front end: select a UI framework, configure a build tool, set up Sass processing, configure your browser to auto-refresh when you make changes, and configure the client and server so they work in unison. If youâ€™re building a new application using Spring Boot and Angular, you can save days by using JHipster. 

JHipster generates a complete and modern web app, unifying:

* A high-performance and robust Java stack on the server side with Spring Boot
* A sleek, modern, mobile-first front-end with Angular and Bootstrap
* A robust microservice architecture with the JHipster Registry, Netflix OSS, the ELK stack, and Docker
* A powerful workflow to build your application with Yeoman, Webpack, and Maven/Gradle

JHipster is a treasure trove of information of how to build modern web applications and microservice architectures. It can turn any curious and willing developer into a Java Hipster!
